<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        android:label="flutter_application_1"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- 指定一个Android主题，在Android进程启动后立即应用到此Activity。
                 在Flutter UI初始化期间，用户可以看到这个主题。
                 此后，该主题继续决定Flutter UI背后的窗口背景。 -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- 不要删除以下元数据。
             Flutter工具使用它来生成GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- 需要查询能够处理文本的活动，参见：
         https://developer.android.com/training/package-visibility 和
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         特别是，Flutter引擎在io.flutter.plugin.text.ProcessTextPlugin中使用此功能。 -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
